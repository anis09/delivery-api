{"version":3,"sources":["../../src/middlewares/validation.middleware.ts"],"sourcesContent":["import { plainToClass } from \"class-transformer\";\r\nimport { validate, ValidationError } from \"class-validator\";\r\nimport { NextFunction, Request, RequestHandler, Response } from \"express\";\r\nimport { errors } from \"./../constants/errors\";\r\n\r\nconst validationMiddleware = (\r\n  type: any,\r\n  value: string | \"body\" | \"query\" | \"params\" = \"body\",\r\n  skipMissingProperties = false,\r\n  whitelist = true,\r\n  forbidNonWhitelisted = true\r\n): RequestHandler => {\r\n  return function (req: Request, res: Response, next: NextFunction) {\r\n    validate(plainToClass(type, req[value]), {\r\n      skipMissingProperties,\r\n      whitelist,\r\n      forbidNonWhitelisted,\r\n    }).then((validationErrors: ValidationError[]) => {\r\n      if (validationErrors.length > 0) {\r\n        console.log(\"Errors\", validationErrors[0].children);\r\n        res.status(400).json({\r\n          message: errors.INVALID_REQUEST,\r\n        });\r\n        return;\r\n      } else {\r\n        next();\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport default validationMiddleware;\r\n"],"names":["validationMiddleware","type","value","skipMissingProperties","whitelist","forbidNonWhitelisted","req","res","next","validate","plainToClass","then","validationErrors","length","console","log","children","status","json","message","errors","INVALID_REQUEST"],"mappings":";;;;+BA+BA;;;eAAA;;;kCA/B6B;gCACa;wBAEnB;AAEvB,MAAMA,uBAAuB,CAC3BC,MACAC,QAA8C,MAAM,EACpDC,wBAAwB,KAAK,EAC7BC,YAAY,IAAI,EAChBC,uBAAuB,IAAI,GACR;IACnB,OAAO,SAAUC,GAAY,EAAEC,GAAa,EAAEC,IAAkB,EAAE;QAChEC,IAAAA,wBAAQ,EAACC,IAAAA,8BAAY,EAACT,MAAMK,GAAG,CAACJ,MAAM,GAAG;YACvCC;YACAC;YACAC;QACF,GAAGM,IAAI,CAAC,CAACC,mBAAwC;YAC/C,IAAIA,iBAAiBC,MAAM,GAAG,GAAG;gBAC/BC,QAAQC,GAAG,CAAC,UAAUH,gBAAgB,CAAC,EAAE,CAACI,QAAQ;gBAClDT,IAAIU,MAAM,CAAC,KAAKC,IAAI,CAAC;oBACnBC,SAASC,cAAM,CAACC,eAAe;gBACjC;gBACA;YACF,OAAO;gBACLb;YACF,CAAC;QACH;IACF;AACF;MAEA,WAAeR"}