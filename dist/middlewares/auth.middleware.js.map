{"version":3,"sources":["../../src/middlewares/auth.middleware.ts"],"sourcesContent":["import { NextFunction, Response } from 'express';\r\nimport { verify } from 'jsonwebtoken';\r\nimport { errors } from './../constants/errors';\r\nimport { vars } from './../constants/vars';\r\nimport { RequestWithUser, TokenPayload } from './../interfaces/auth.interface';\r\nimport { HttpException } from './error.middleware';\r\nimport { userModel } from './../models/user.model';\r\n\r\nconst authMiddleware = async (req: RequestWithUser, res: Response, next: NextFunction) => {\r\n    try {\r\n        const token = req.cookies['Authorization'] || (req.header('Authorization') ? req.header('Authorization').split('Bearer ')[1] : null);\r\n        console.log(\"TOken\", token)\r\n        if (token) {\r\n            const payload = (await verify(token, vars.jwtSecretKey)) as TokenPayload;\r\n            const foundUser = await userModel.findById(payload.uid);\r\n\r\n            if (foundUser) {\r\n                if (foundUser.account.passwordRecoveredAt) {\r\n                    if (payload.iat < Math.floor(foundUser.account.passwordRecoveredAt.getTime() / 1000)) {\r\n                        next(new HttpException(401, errors.WRONG_AUTHENTICATION));\r\n                    }\r\n                }\r\n\r\n                if (foundUser.account.lastSignOut) {\r\n                    if (payload.iat < Math.floor(foundUser.account.lastSignOut.getTime() / 1000)) {\r\n                        next(new HttpException(401, errors.WRONG_AUTHENTICATION));\r\n                    }\r\n                }\r\n\r\n                req.user = foundUser._id;\r\n                next();\r\n            } else {\r\n                next(new HttpException(401, errors.WRONG_AUTHENTICATION));\r\n            }\r\n        } else {\r\n            next(new HttpException(401, errors.WRONG_AUTHENTICATION));\r\n        }\r\n    } catch (error) {\r\n        console.log(\"Error\", error)\r\n        next(new HttpException(401, errors.WRONG_AUTHENTICATION));\r\n    }\r\n}\r\n\r\nexport default authMiddleware;"],"names":["authMiddleware","req","res","next","token","cookies","header","split","console","log","payload","verify","vars","jwtSecretKey","foundUser","userModel","findById","uid","account","passwordRecoveredAt","iat","Math","floor","getTime","HttpException","errors","WRONG_AUTHENTICATION","lastSignOut","user","_id","error"],"mappings":";;;;+BA2CA;;;eAAA;;;8BA1CuB;wBACA;sBACF;iCAES;2BACJ;AAE1B,MAAMA,iBAAiB,OAAOC,KAAsBC,KAAeC,OAAuB;IACtF,IAAI;QACA,MAAMC,QAAQH,IAAII,OAAO,CAAC,gBAAgB,IAAKJ,CAAAA,IAAIK,MAAM,CAAC,mBAAmBL,IAAIK,MAAM,CAAC,iBAAiBC,KAAK,CAAC,UAAU,CAAC,EAAE,GAAG,IAAI,AAAD;QAClIC,QAAQC,GAAG,CAAC,SAASL;QACrB,IAAIA,OAAO;YACP,MAAMM,UAAW,MAAMC,IAAAA,oBAAM,EAACP,OAAOQ,UAAI,CAACC,YAAY;YACtD,MAAMC,YAAY,MAAMC,oBAAS,CAACC,QAAQ,CAACN,QAAQO,GAAG;YAEtD,IAAIH,WAAW;gBACX,IAAIA,UAAUI,OAAO,CAACC,mBAAmB,EAAE;oBACvC,IAAIT,QAAQU,GAAG,GAAGC,KAAKC,KAAK,CAACR,UAAUI,OAAO,CAACC,mBAAmB,CAACI,OAAO,KAAK,OAAO;wBAClFpB,KAAK,IAAIqB,8BAAa,CAAC,KAAKC,cAAM,CAACC,oBAAoB;oBAC3D,CAAC;gBACL,CAAC;gBAED,IAAIZ,UAAUI,OAAO,CAACS,WAAW,EAAE;oBAC/B,IAAIjB,QAAQU,GAAG,GAAGC,KAAKC,KAAK,CAACR,UAAUI,OAAO,CAACS,WAAW,CAACJ,OAAO,KAAK,OAAO;wBAC1EpB,KAAK,IAAIqB,8BAAa,CAAC,KAAKC,cAAM,CAACC,oBAAoB;oBAC3D,CAAC;gBACL,CAAC;gBAEDzB,IAAI2B,IAAI,GAAGd,UAAUe,GAAG;gBACxB1B;YACJ,OAAO;gBACHA,KAAK,IAAIqB,8BAAa,CAAC,KAAKC,cAAM,CAACC,oBAAoB;YAC3D,CAAC;QACL,OAAO;YACHvB,KAAK,IAAIqB,8BAAa,CAAC,KAAKC,cAAM,CAACC,oBAAoB;QAC3D,CAAC;IACL,EAAE,OAAOI,OAAO;QACZtB,QAAQC,GAAG,CAAC,SAASqB;QACrB3B,KAAK,IAAIqB,8BAAa,CAAC,KAAKC,cAAM,CAACC,oBAAoB;IAC3D;AACJ;MAEA,WAAe1B"}