{"version":3,"sources":["../../src/services/pickup.service.ts"],"sourcesContent":["import { vars } from \"constants/vars\";\r\nimport {\r\n  CreatePickUpReqDto,\r\n  CreatePickUpResDto,\r\n  DeletePickupResDto,\r\n  UpdatePickupReqDto,\r\n  UpdatePickupResDto,\r\n} from \"../dtos/pickup.dto\";\r\nimport { PickUp } from \"../interfaces/models/pickup.model.interface\";\r\nimport { pickUpModel } from \"../models/pickup.model\";\r\nimport { HttpException } from \"../middlewares/error.middleware\";\r\nimport { errors } from \"../constants/errors\";\r\n\r\nexport class PickUpService {\r\n  private pickUps = pickUpModel;\r\n\r\n  public async createPickUp(input: CreatePickUpReqDto): Promise<PickUp> {\r\n    let result: PickUp;\r\n    let newPickUp = new this.pickUps({\r\n      pickup_time: input.pickup_time,\r\n      pickup_address: input.pickup_adress,\r\n      pickup_city: input.pickup_city,\r\n      pickup_state: input.pickup_state,\r\n      pickup_zipcode: input.pickup_zipCode,\r\n      pickup_items: input.pickup_items,\r\n      pickup_status: input.pickup_status,\r\n    });\r\n    result = await newPickUp.save();\r\n    if (result) {\r\n      return result;\r\n    }\r\n  }\r\n  \r\n  public async getAllPickUps(): Promise<PickUp[]> {\r\n    let pickUps: PickUp[] = await this.pickUps.find();\r\n    return pickUps;\r\n  }\r\n\r\n  public async updatePickup(\r\n    input: UpdatePickupReqDto,\r\n    pickUpId: string\r\n  ): Promise<UpdatePickupResDto> {\r\n    let foundPickup = await this.pickUps.findOne({ _id: pickUpId });\r\n    if (!foundPickup)\r\n      throw new HttpException(404, errors.PICKUP_DOES_NOT_EXIST);\r\n\r\n    const updatedPickup: PickUp = await this.pickUps.findByIdAndUpdate(\r\n      pickUpId,\r\n      input,\r\n      { new: true }\r\n    );\r\n    return {\r\n      success: updatedPickup != null ? true : false,\r\n    };\r\n  }\r\n  public async deletePickup(pickUpId:string):Promise<DeletePickupResDto>{\r\n    let foundPickup = await this.pickUps.findOne({_id:pickUpId})\r\n    if(!foundPickup) throw new HttpException(404,errors.PICKUP_DOES_NOT_EXIST)\r\n\r\n    await this.pickUps.findByIdAndDelete({_id:pickUpId})\r\n    return{\r\n      success:true\r\n    }\r\n  }\r\n}\r\n\r\nexport default PickUpService;\r\n"],"names":["PickUpService","createPickUp","input","result","newPickUp","pickUps","pickup_time","pickup_address","pickup_adress","pickup_city","pickup_state","pickup_zipcode","pickup_zipCode","pickup_items","pickup_status","save","getAllPickUps","find","updatePickup","pickUpId","foundPickup","findOne","_id","HttpException","errors","PICKUP_DOES_NOT_EXIST","updatedPickup","findByIdAndUpdate","new","success","deletePickup","findByIdAndDelete","pickUpModel"],"mappings":";;;;;;;;;;;IAaaA,aAAa;eAAbA;;IAqDb,OAA6B;eAA7B;;;6BAzD4B;iCACE;wBACP;;;;;;;;;;;;;;AAEhB,IAAA,AAAMA,gBAAN,MAAMA;IAGX,MAAaC,aAAaC,KAAyB,EAAmB;QACpE,IAAIC;QACJ,IAAIC,YAAY,IAAI,IAAI,CAACC,OAAO,CAAC;YAC/BC,aAAaJ,MAAMI,WAAW;YAC9BC,gBAAgBL,MAAMM,aAAa;YACnCC,aAAaP,MAAMO,WAAW;YAC9BC,cAAcR,MAAMQ,YAAY;YAChCC,gBAAgBT,MAAMU,cAAc;YACpCC,cAAcX,MAAMW,YAAY;YAChCC,eAAeZ,MAAMY,aAAa;QACpC;QACAX,SAAS,MAAMC,UAAUW,IAAI;QAC7B,IAAIZ,QAAQ;YACV,OAAOA;QACT,CAAC;IACH;IAEA,MAAaa,gBAAmC;QAC9C,IAAIX,UAAoB,MAAM,IAAI,CAACA,OAAO,CAACY,IAAI;QAC/C,OAAOZ;IACT;IAEA,MAAaa,aACXhB,KAAyB,EACzBiB,QAAgB,EACa;QAC7B,IAAIC,cAAc,MAAM,IAAI,CAACf,OAAO,CAACgB,OAAO,CAAC;YAAEC,KAAKH;QAAS;QAC7D,IAAI,CAACC,aACH,MAAM,IAAIG,8BAAa,CAAC,KAAKC,cAAM,CAACC,qBAAqB,EAAE;QAE7D,MAAMC,gBAAwB,MAAM,IAAI,CAACrB,OAAO,CAACsB,iBAAiB,CAChER,UACAjB,OACA;YAAE0B,KAAK,IAAI;QAAC;QAEd,OAAO;YACLC,SAASH,iBAAiB,IAAI,GAAG,IAAI,GAAG,KAAK;QAC/C;IACF;IACA,MAAaI,aAAaX,QAAe,EAA6B;QACpE,IAAIC,cAAc,MAAM,IAAI,CAACf,OAAO,CAACgB,OAAO,CAAC;YAACC,KAAIH;QAAQ;QAC1D,IAAG,CAACC,aAAa,MAAM,IAAIG,8BAAa,CAAC,KAAIC,cAAM,CAACC,qBAAqB,EAAC;QAE1E,MAAM,IAAI,CAACpB,OAAO,CAAC0B,iBAAiB,CAAC;YAACT,KAAIH;QAAQ;QAClD,OAAM;YACJU,SAAQ,IAAI;QACd;IACF;;QAjDA,uBAAQxB,WAAU2B,wBAAW;;AAkD/B;MAEA,WAAehC"}