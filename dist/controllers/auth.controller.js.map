{"version":3,"sources":["../../src/controllers/auth.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from \"express\";\r\nimport {\r\n  CheckEmailReqDto,\r\n  CheckEmailResDto,\r\n  RefreshTokenReqDto,\r\n  ResendVerificationCodeEmailReqDto,\r\n  ResendVerificationCodeEmailResDto,\r\n  ResetPasswordReqDto,\r\n  ResetPasswordResDto,\r\n  SendPasswordResetEmailReqDto,\r\n  SendPasswordResetEmailResDto,\r\n  SignInUserReqDto,\r\n  SignInUserResDto,\r\n  SignOutUserResDto,\r\n  SignUpUserReqDto,\r\n  SignUpUserResDto,\r\n  VerifyUserAccountReqDto,\r\n  VerifyUserAccountResDto\r\n} from \"../dtos/auth.dto\";\r\nimport { RequestWithUser } from \"../interfaces/auth.interface\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nclass AuthController {\r\n  private authService = new AuthService();\r\n\r\n\r\n  public signInUser = async (\r\n    req: Request,\r\n    res: Response,\r\n    next: NextFunction\r\n  ) => {\r\n    try {\r\n      const inputData: SignInUserReqDto = req.body;\r\n      const outputData: SignInUserResDto = await this.authService.signInUser(\r\n        inputData\r\n      );\r\n\r\n      res.status(200).json(outputData);\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n\r\n  public signOutUser = async (\r\n    req: RequestWithUser,\r\n    res: Response,\r\n    next: NextFunction\r\n  ) => {\r\n    try {\r\n      const outputData: SignOutUserResDto = await this.authService.signOutUser(\r\n        req.user\r\n      );\r\n\r\n      res.status(200).json(outputData);\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n\r\n  public signUpUser = async (\r\n    req: Request,\r\n    res: Response,\r\n    next: NextFunction\r\n  ) => {\r\n    try {\r\n      const inputData: SignUpUserReqDto = req.body;\r\n      const outputData: SignUpUserResDto = await this.authService.signUpUser(\r\n        inputData\r\n      );\r\n\r\n      res.status(201).json(outputData);\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n  public checkEmail = async (\r\n    req: Request,\r\n    res: Response,\r\n    next: NextFunction\r\n  ) => {\r\n    try {\r\n      const inputData: CheckEmailReqDto = req.query as any;\r\n      const outputData: CheckEmailResDto = await this.authService.checkEmail(\r\n        inputData\r\n      );\r\n\r\n      res.status(200).json(outputData);\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n\r\n  public verifyUserAccount = async (\r\n    req: Request,\r\n    res: Response,\r\n    next: NextFunction\r\n  ) => {\r\n    try {\r\n      const inputData: VerifyUserAccountReqDto = req.body;\r\n      const outputData: VerifyUserAccountResDto =\r\n        await this.authService.verifyUserAccount(inputData);\r\n\r\n      res.status(200).json(outputData);\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n\r\n  public resendVerificationCodeEmail = async (\r\n    req: Request,\r\n    res: Response,\r\n    next: NextFunction\r\n  ) => {\r\n    try {\r\n      const inputData: ResendVerificationCodeEmailReqDto = req.body;\r\n      const outputData: ResendVerificationCodeEmailResDto =\r\n        await this.authService.resendVerificationCodeEmail(inputData);\r\n\r\n      res.status(200).json(outputData);\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n\r\n  public resetPassword = async (\r\n    req: Request,\r\n    res: Response,\r\n    next: NextFunction\r\n  ) => {\r\n    try {\r\n      const inputData: ResetPasswordReqDto = req.body;\r\n      const outputData: ResetPasswordResDto =\r\n        await this.authService.resetPassword(inputData);\r\n\r\n      res.status(200).json(outputData);\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n  public sendPasswordResetEmail = async (\r\n    req: Request,\r\n    res: Response,\r\n    next: NextFunction\r\n  ) => {\r\n    try {\r\n      const inputData: SendPasswordResetEmailReqDto = req.body;\r\n      const outputData: SendPasswordResetEmailResDto =\r\n        await this.authService.sendPasswordResetEmail(inputData);\r\n\r\n      res.status(200).json(outputData);\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n  public refreshToken = async (\r\n    req: Request,\r\n    res: Response,\r\n    next: NextFunction\r\n  ) => {\r\n    try {\r\n      let { refreshToken }: RefreshTokenReqDto = req.cookies as any;\r\n      let outputData: any = await this.authService.refreshAccessToken(\r\n        refreshToken\r\n      );\r\n      res.status(200).json(outputData);\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  };\r\n}\r\n\r\nexport default AuthController;\r\n"],"names":["AuthController","authService","AuthService","signInUser","req","res","next","inputData","body","outputData","status","json","error","signOutUser","user","signUpUser","checkEmail","query","verifyUserAccount","resendVerificationCodeEmail","resetPassword","sendPasswordResetEmail","refreshToken","cookies","refreshAccessToken"],"mappings":"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"}